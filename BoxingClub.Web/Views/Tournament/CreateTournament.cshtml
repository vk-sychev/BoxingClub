@model BoxingClub.Web.Models.CreateEditTournamentViewModel

@{
    ViewData["Title"] = "CreateTournament";
}
<div class="d-flex justify-content-between mb-2">
    <h1>New Tournament</h1>
    <div class="mt-2">
        <a asp-action="GetAllTournaments" class="btn btn-secondary" asp-controller="Tournament">Back to List</a>
    </div>
</div>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateTournament">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="@Model.Tournament.Name" class="control-label font-weight-bold"></label>
                <input asp-for="@Model.Tournament.Name" class="form-control" />
                <span asp-validation-for="@Model.Tournament.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Tournament.Country" class="control-label font-weight-bold"></label>
                <input asp-for="@Model.Tournament.Country" class="form-control" />
                <span asp-validation-for="@Model.Tournament.Country" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Tournament.City" class="control-label font-weight-bold"></label>
                <input asp-for="@Model.Tournament.City" class="form-control" />
                <span asp-validation-for="@Model.Tournament.City" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Tournament.Date" class="control-label font-weight-bold"></label>
                <input asp-for="@Model.Tournament.Date" class="form-control" />
                <span asp-validation-for="@Model.Tournament.Date" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label font-weight-bold">
                    <input class="form-check-input" asp-for="@Model.Tournament.IsMedCertificateNecessary" /> @Html.DisplayNameFor(model => model.Tournament.IsMedCertificateNecessary)
                </label>
            </div>
            <div class="card">
                <div class="card-header">
                    <h2>Choose Categories</h2>
                </div>

                <div class="card-body">
                    @for (int i = 0; i < Model.Categories.Count; i++)
                    {
                        <div class="form-check">
                            <input type="hidden" asp-for="@Model.Categories[i].Id" />
                            <input type="hidden" asp-for="@Model.Categories[i].Name" />
                            <input class="form-check-input" asp-for="@Model.Categories[i].IsSelected" />
                            <label class="form-check-label" asp-for="@Model.Categories[i].IsSelected">
                                @Model.Categories[i].Name
                            </label>
                        </div>
                    }
                </div>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
