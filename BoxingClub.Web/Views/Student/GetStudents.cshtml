@model PageViewModel<StudentLiteViewModel>
@using BoxingClub.Infrastructure.Constants

@{ ViewData["Title"] = "All Students";
    string hasPreviousPage = Model.HasPreviousPage ? "" : "disabled";
    string hasNextPage = Model.HasNextPage ? "" : "disabled";
    string controller = "Student";
    string action = "GetStudents";
    var pageSize = ViewBag.pageSize;
    var experienceFilter = ViewBag.experienceFilter;
    var medExaminationFilter = ViewBag.medExaminationFilter;
}

<div class="d-flex justify-content-between mb-2">
    <h1>All Students</h1>
    @if (User.Identity.IsAuthenticated && User.IsInRole(Constants.AdminRoleName))
    {
        <div class="mt-2">
            <a class="btn btn-primary" asp-action="CreateStudent" asp-controller="Student">Create New Student</a>
        </div>
    }
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                Surname
            </th>
            <th>
                Name
            </th>
            <th>
                Patronymic
            </th>
            <th>
                Date of Birth
            </th>
            <th>
                Experience
            </th>
            <th>
                Group's Name
            </th>
            <th>
                <div class="d-inline d-flex justify-content-end">
                    <div class="mr-3">
                        <button type="button" class="btn btn-info btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Experience
                        </button>
                        <div class="dropdown-menu">
                            <a asp-action="@action" asp-controller="@controller" 
                               asp-route-pageIndex="@(Model.PageIndex)" asp-route-pageSize="@pageSize" 
                               asp-route-experienceFilter="0" asp-route-medExaminationFilter="@medExaminationFilter" 
                               class="page-link">All</a>

                            <a asp-action="@action" asp-controller="@controller" 
                               asp-route-pageIndex="@(Model.PageIndex)" asp-route-pageSize="@pageSize" 
                               asp-route-experienceFilter="1" asp-route-medExaminationFilter="@medExaminationFilter" 
                               class="page-link">Experienced</a>

                            <a asp-action="@action" asp-controller="@controller" 
                               asp-route-pageIndex="@(Model.PageIndex)" asp-route-pageSize="@pageSize"
                               asp-route-experienceFilter="2" asp-route-medExaminationFilter="@medExaminationFilter" 
                               class="page-link">Newbies</a>
                        </div>
                    </div>

                    <div class="mr-3">
                        <button type="button" class="btn btn-info btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            MedExamination
                        </button>
                        <div class="dropdown-menu">
                            <a asp-action="@action" asp-controller="@controller"
                               asp-route-pageIndex="@(Model.PageIndex)" asp-route-pageSize="@pageSize"
                               asp-route-experienceFilter="@experienceFilter" asp-route-medExaminationFilter = "0"
                               class="page-link">All</a>

                            <a asp-action="@action" asp-controller="@controller"
                               asp-route-pageIndex="@(Model.PageIndex)" asp-route-pageSize="@pageSize"
                               asp-route-experienceFilter="@experienceFilter" asp-route-medExaminationFilter = "1" 
                               class="page-link">Successed</a>

                            <a asp-action="@action" asp-controller="@controller"
                               asp-route-pageIndex="@(Model.PageIndex)" asp-route-pageSize="@pageSize"
                               asp-route-experienceFilter="@experienceFilter" asp-route-medExaminationFilter = "2"
                               class="page-link">Failed</a>
                        </div>
                    </div>

                    <div>
                        <button type="button" class="btn btn-info btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Page Size
                        </button>
                        <div class="dropdown-menu">
                            @foreach (var size in ViewBag.Sizes)
                            {
                                <a asp-action="@action" asp-controller="@controller" 
                                   asp-route-pageIndex="@(Model.PageIndex)" asp-route-pageSize="@size" 
                                   asp-route-experienceFilter="@experienceFilter" asp-route-medExaminationFilter="@medExaminationFilter"
                                   class="page-link">@size</a>
                            }
                        </div>
                    </div>
                </div>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Surname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Patronymic)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BornDate)
                </td>
                <td>
                    @if (item.Experienced)
                    {
                        @Html.Raw("Experienced")
                    }
                    else
                    {
                        @Html.Raw("Newbie")
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BoxingGroup.Name)
                </td>
                @if (User.Identity.IsAuthenticated && User.IsInRole(Constants.AdminRoleName))
                {
                    <td>
                        <div class="d-flex justify-content-end">
                            @Html.ActionLink("Edit", "EditStudent", new { id = item.Id }, new { @class = "btn btn-outline-primary px-3 btn-sm" })
                            @Html.ActionLink("Details", "DetailsStudent", new { id = item.Id }, new { @class = "btn btn-outline-secondary btn-sm px-3 ml-3" })
                            @Html.ActionLink("Delete", "DeleteStudent", new { id = item.Id }, new { @class = "btn btn-outline-danger btn-sm px-3 ml-3" })
                        </div>
                    </td>
                }
                else if (User.Identity.IsAuthenticated && User.IsInRole(Constants.ManagerRoleName))
                {
                    <td>
                        <div class="d-flex justify-content-end">
                            @Html.ActionLink("Edit", "EditStudent", new { id = item.Id }, new { @class = "btn btn-outline-primary px-3 btn-sm" })
                            @Html.ActionLink("Details", "DetailsStudent", new { id = item.Id }, new { @class = "btn btn-outline-secondary btn-sm px-3 ml-3" })
                        </div>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

<ul class="pagination">
    <li class="page-item @hasPreviousPage">
        <a class="page-link" asp-action="@action" asp-controller="@controller" 
           asp-route-pageIndex="@(Model.PageIndex - 1)" asp-route-pageSize="@pageSize" 
           asp-route-experienceFilter="@experienceFilter" asp-route-medExaminationFilter="@medExaminationFilter">Previous</a>
    </li>

    @if (Model.StartPage > 1)
    {
        <li class="page-item @(1 == Model.PageIndex ? "disabled" : "")">
            <a class="page-link" asp-action="@action" asp-controller="@controller"
               asp-route-pageIndex="1" asp-route-pageSize="@pageSize"
               asp-route-experienceFilter="@experienceFilter" asp-route-medExaminationFilter="@medExaminationFilter">1</a>
        </li>
    }

    @if (Model.StartPage > 2)
    {

        <li class="page-item disabled">
            <p class="page-link">...</p>
        </li>
    }

    @if (Model.TotalPages != 0)
    {
        @for (int i = Model.StartPage; i <= Model.LastPage; i++)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a class="page-link" asp-action="@action" asp-controller="@controller"
                   asp-route-pageIndex="@i" asp-route-pageSize="@pageSize"
                   asp-route-experienceFilter="@experienceFilter" asp-route-medExaminationFilter="@medExaminationFilter">@i</a>
            </li>
        }
    }

    @if (Model.LastPage < Model.TotalPages - 1)
    {
        <li class="page-item disabled">
            <p class="page-link">...</p>
        </li>
    }

    @if (Model.LastPage < Model.TotalPages)
    {
        <li class="page-item @(Model.TotalPages == Model.PageIndex ? "disabled" : "")">
            <a class="page-link" asp-action="@action" asp-controller="@controller"
               asp-route-pageIndex="@Model.TotalPages" asp-route-pageSize="@pageSize"
               asp-route-experienceFilter="@experienceFilter" asp-route-medExaminationFilter="@medExaminationFilter">@Model.TotalPages</a>
        </li>
    }

    <li class="page-item @hasNextPage">
        <a class="page-link" asp-action="@action" asp-controller="@controller"
           asp-route-pageIndex="@(Model.PageIndex + 1)" asp-route-pageSize="@pageSize"
           asp-route-experienceFilter="@experienceFilter" asp-route-medExaminationFilter="@medExaminationFilter">Next</a>
    </li>
</ul>