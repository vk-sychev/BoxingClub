@model BoxingClub.Web.Models.StudentFullViewModel
@using BoxingClub.Infrastructure.Constants

@{
    ViewData["Title"] = "Student's Details";
    var fromHomeController = ViewBag.fromHomeController;
    var returnId = ViewBag.returnId;
}


<div class="d-flex justify-content-between mb-2">
    <h1>Student's Details</h1>
    <div class="d-flex justify-content-end mt-2">
        @if (User.Identity.IsAuthenticated && User.IsInRole(Constants.AdminRoleName))
        {
            <div>
                @Html.ActionLink("Edit Student", "EditStudent", "Student", new { id = Model.Id }, new { @class = "btn btn-primary" })
            </div>
        }
        @if (fromHomeController)
        {
            <div class="ml-5">
                <a asp-action="DetailsBoxingGroup" asp-controller="Home" class="btn btn-secondary" asp-route-id=@returnId>Back to groups List</a>
            </div>
        }
        else
        {
            <div class="ml-5">
                <a asp-action="GetAllStudents" asp-controller="Student" class="btn btn-secondary">Back to students List</a>
            </div>
        }
    </div>
</div>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Surname)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Surname)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Patronymic)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Patronymic)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.BornDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.BornDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Height)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Height)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Weight)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Weight)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Gender)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Gender)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.NumberOfFights)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NumberOfFights)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateOfEntry)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateOfEntry)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.BoxingGroup.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.BoxingGroup.Name)
        </dd>
    </dl>
</div>

<div class="card col-md-8">
    @{await Html.RenderPartialAsync("_MedicalCertificatesPartial");}
</div>

