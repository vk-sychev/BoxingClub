@model PageViewModel<BoxingGroupFullViewModel>
@using BoxingClub.Infrastructure.Constants
@{
    ViewData["Title"] = "Index";
    var activePage = ViewBag.ActivePage;
}

<div class="d-flex justify-content-between mb-2">
    <h1>Boxing Groups</h1>

    @if (User.Identity.IsAuthenticated && User.IsInRole(Constants.AdminRoleName))
    {
        <div class="mt-2">
            <a class="btn btn-primary" asp-action="CreateBoxingGroup" asp-controller="Home">Create New Boxing Group</a>
        </div>
    }
</div>

@if (!Model.Items.Any())
{
    <h5> You have no groups yet</h5>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @*@Html.DisplayNameFor(model => model.BoxingGroups.Name)*@ Name
                </th>
                <th>
                    @* @Html.DisplayNameFor(model => model.CoachFullName)*@ Full Name
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody id="tableBody">
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CoachFullName)
                    </td>
                    @if (User.Identity.IsAuthenticated && User.IsInRole(Constants.AdminRoleName))
                    {
                        <td>
                            <div class="d-flex justify-content-end">
                                @Html.ActionLink("Edit", "EditBoxingGroup", "Home", new { id = item.Id }, new { @class = "btn btn-outline-primary btn-sm px-3" })
                                @Html.ActionLink("Details", "DetailsBoxingGroup", "Home", new { id = item.Id }, new { @class = "btn btn-outline-secondary btn-sm px-3 ml-3" })
                                @Html.ActionLink("Delete", "DeleteBoxingGroup", "Home", new { id = item.Id }, new { @class = "btn btn-outline-danger btn-sm px-3 ml-3" })
                            </div>
                        </td>
                    }
                    else
                    {
                        <td>
                            <div class="d-flex justify-content-end">
                                @Html.ActionLink("Details", "DetailsBoxingGroup", "Home", new { id = item.Id }, new { @class = "btn btn-outline-primary btn-sm px-3" })
                            </div>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}


<div class="d-flex justify-content-end">
    <div class="mr-2">
        @if (Model.HasPreviousPage)
        {
            <a asp-action="Index"
               asp-route-pageIndex="@(Model.PageIndex - 1)"
               class="btn btn-outline-dark">
                <i class="glyphicon glyphicon-chevron-left"></i>
                Previous
            </a>
        }
    </div>

    @if (Model.TotalPages != 0)
    {
        <ul class="pagination justify-content-end">
            @for (int i = Model.StartPage; i <= Model.LastPage; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" asp-controller="Home", asp-route-pageIndex="@i">@i</a>
                </li>
            }
        </ul>
    }

    <div class="ml-2">
        @if (Model.HasNextPage)
        {
            <a asp-action="Index"
               asp-route-pageIndex="@(Model.PageIndex + 1)"
               class="btn btn-outline-dark">
                Next
                <i class="glyphicon glyphicon-chevron-right"></i>
            </a>
        }
    </div>
</div>



