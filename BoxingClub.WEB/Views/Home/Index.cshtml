@model PageViewModel<BoxingGroupLiteViewModel>
@using BoxingClub.Infrastructure.Constants
@{
    ViewData["Title"] = "Index";
    string hasPreviousPage = Model.HasPreviousPage ? "" : "disabled";
    string hasNextPage = Model.HasNextPage ? "" : "disabled";
    string controller = "Home";
    string action = "Index";
    var pageSize = ViewBag.pageSize;
}

<div class="d-flex justify-content-between mb-2">
    <h1>Boxing Groups</h1>
    @if (User.Identity.IsAuthenticated && User.IsInRole(Constants.AdminRoleName))
    {
        <div class="mt-2">
            <a class="btn btn-primary" asp-action="CreateBoxingGroup" asp-controller="Home">Create New Boxing Group</a>
        </div>
        <div class="mt-2">
            <a id="createButton" class="btn btn-primary">Create New Boxing Group Ajax</a>
        </div>
    }
</div>

@if (!Model.Items.Any())
{
    <h5> You have no groups yet</h5>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    Group's Name
                </th>
                <th>
                    Full Name
                </th>
                <th>
                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn btn-info btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Page Size
                        </button>
                        <div class="dropdown-menu">
                            @foreach (var size in ViewBag.Sizes)
                            {
                                <a asp-action="@action" asp-controller="@controller" asp-route-pageIndex="@(Model.PageIndex)" asp-route-pageSize="@size" class="page-link">@size</a>
                            }
                        </div>
                    </div>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody id="tableBody">
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CoachFullName)
                    </td>
                    @if (User.Identity.IsAuthenticated && User.IsInRole(Constants.AdminRoleName))
                    {
                        <td>
                            <div class="d-flex justify-content-end px-3">
                                @Html.ActionLink("Edit", "EditBoxingGroup", "Home", new { id = item.Id }, new { @class = "btn btn-outline-primary btn-sm" })
                                @Html.ActionLink("Details", "DetailsBoxingGroup", "Home", new { id = item.Id }, new { @class = "btn btn-outline-secondary btn-sm ml-3" })
                                @Html.ActionLink("Delete", "DeleteBoxingGroup", "Home", new { id = item.Id }, new { @class = "btn btn-outline-danger btn-sm ml-3" })
                            </div>
                        </td>
                    }
                    else
                    {
                        <td>
                            <div class="d-flex justify-content-end px-3">
                                @Html.ActionLink("Details", "DetailsBoxingGroup", "Home", new { id = item.Id }, new { @class = "btn btn-outline-primary btn-sm" })
                            </div>
                        </td>
                    }
                </tr>
            }
            <tr id="formTr">
                @{await Html.RenderPartialAsync("_CreateEditBoxingGroupPartial", new BoxingGroupLiteViewModel()); }
            </tr>
        </tbody>
    </table>
}


<ul class="pagination">
    <li class="page-item @hasPreviousPage">
        <a class="page-link" asp-action="@action" asp-controller="@controller" asp-route-pageIndex="@(Model.PageIndex - 1)" asp-route-pageSize="@pageSize">Previous</a>
    </li>

    @if (Model.StartPage > 1)
    {
        <li class="page-item @(1 == Model.PageIndex ? "disabled" : "")">
            <a class="page-link" asp-action="@action" asp-controller="@controller" asp-route-pageIndex="1" asp-route-pageSize="@pageSize">1</a>
        </li>
    }

    @if (Model.StartPage > 2)
    {

        <li class="page-item disabled">
            <p class="page-link">...</p>
        </li>
    }

    @if (Model.TotalPages != 0)
    {
        @for (int i = Model.StartPage; i <= Model.LastPage; i++)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a class="page-link" asp-action="@action" asp-controller="@controller" asp-route-pageIndex="@i" asp-route-pageSize="@pageSize">@i</a>
            </li>
        }
    }

    @if (Model.LastPage < Model.TotalPages - 1)
    {
        <li class="page-item disabled">
            <p class="page-link">...</p>
        </li>
    }

    @if (Model.LastPage < Model.TotalPages)
    {
        <li class="page-item @(Model.TotalPages == Model.PageIndex ? "disabled" : "")">
            <a class="page-link" asp-action="@action" asp-controller="@controller" asp-route-pageIndex="@Model.TotalPages" asp-route-pageSize="@pageSize">@Model.TotalPages</a>
        </li>
    }

    <li class="page-item @hasNextPage">
        <a class="page-link" asp-action="@action" asp-controller="@controller" asp-route-pageIndex="@(Model.PageIndex + 1)" asp-route-pageSize="@pageSize">Next</a>
    </li>
</ul>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
@*    $(document).ready(function () {
        $("#createButton").click(function () {
             $("#tableBody").append("<tr>")
             $("tr:Last").append("<td>");
                    $("td:Last").append("<input asp-for='Name' class='form-control'/>");
                    $("td:Last").append("<span asp-validation-for='Name' class='text-danger'></span>");

                $("tr:Last").append("<td>");
                    $("td:Last").append("<div>");
                        $("td:Last").append("<select asp-for='CoachId' class='form-select custom-select' asp-items='@ViewBag.Coaches'>");
                            $("td:Last").append("<option selected='selected' disabled='disabled'>Choose coach</option>");
                        $("td:Last").append("</select>")
                        $("td:Last").append("<span asp-validation-for='CoachId' class='text-danger'></span>");
                    $("td:Last").append("</div>");
        })
    })*@

    $(document).ready(function () {
        var dataType = 'application/x-www-form-urlencoded';


        $("#createButton").click(function () {
            $("#formTr").show();
        })

        $("#cancelButton").click(function () {
            $("#formTr").hide();
        })

        $("#boxingGroupForm").submit(function () {
            $.validator.unobtrusive.parse($('#boxingGroupForm'));
@*            var isValid = $('#boxingGroupForm').validate();*@
            var data = $('#boxingGroupForm').serialize();
            $.ajax({
                url: "Home/CreateBoxingGroup",
                type: "POST",
                contentType: dataType,
                data: data,
                success : alert("success")
            })
        })
    })

</script>




